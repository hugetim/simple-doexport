# AUTOGENERATED! DO NOT EDIT! File to edit: 00_core.ipynb (unless otherwise specified).

__all__ = ['read_nb', 'notebook2do', 'simple_doexport']

# Cell
from nbdev.imports import *
from fastcore.script import *
from fastcore.foundation import *
#from keyword import iskeyword
import nbformat

# Cell
def read_nb(fname):
    "Read the notebook in `fname`."
    with open(Path(fname),'r', encoding='utf8') as f: return nbformat.reads(f.read(), as_version=4)

# Cell
def notebook2do(fname):
    "Create a module file for `fname`."
    fname = Path(fname)
    nb = read_nb(fname)
    cells = [(i,c) for i,c in enumerate(nb['cells']) if c['cell_type'] == 'code']
    for i,c in cells:
        code = c['source']
        fname_out = f'{Path(fname).stem}.do'
        if i != c['execution_count']:
            print(f"Warning: execution count, {c['execution_count']}, differs from cell number, {i}.")
        with open(fname_out, 'a', encoding='utf8') as f:
            f.write(f'**# [{i}]:')
            f.write(code)

# Cell
@call_parse
def simple_doexport(fname:Param("A stata_kernel notebook name", str)):
    "Export notebooks matching `fname` to Stata .do files"
    notebook2do(fname=fname)